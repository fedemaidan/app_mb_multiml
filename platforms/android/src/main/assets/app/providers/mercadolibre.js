"use strict";
var core_1 = require("@angular/core");
var http_1 = require("@angular/http");
var api_1 = require("./api");
var user_1 = require("./user");
require("rxjs/add/operator/map");
var MercadoLibre = (function () {
    function MercadoLibre(http, api, user) {
        this.http = http;
        this.api = api;
        this.user = user;
        this.urlML = "https://api.mercadolibre.com";
    }
    MercadoLibre.prototype.urlIniML = function (params) {
        var accountInfo = this.user.cargarHeadersAutorizations(null);
        var seq = this.api.get(this.user.getApi(), 'iniciarConML', params, accountInfo).share();
        return seq;
    };
    MercadoLibre.prototype.logoutML = function () {
        return "https://www.mercadolibre.com/jms/mla/lgz/logout";
    };
    MercadoLibre.prototype.removerCuentaML = function (body) {
        var _this = this;
        var headers = this.user.cargarHeadersAutorizations({});
        var seq = this.api.post(this.user.getApi(), 'removerUsuarioML', body, headers).share();
        seq
            .map(function (res) { return res.json(); })
            .subscribe(function (res) {
            if (res.success == true) {
                _this.user.actualizarCuentas({});
            }
            else {
            }
        }, function (err) {
            console.error('ERROR', err);
        });
        return seq;
    };
    MercadoLibre.prototype.responderPregunta = function (accountInfo) {
        var _this = this;
        accountInfo = this.user.cargarHeadersAutorizations(accountInfo);
        var seq = this.api.post(this.user.getApi(), 'responder', accountInfo).share();
        seq
            .map(function (res) { return res.json(); })
            .subscribe(function (res) {
            if (res.success == true) {
                _this.preguntas.splice(0, 1);
            }
            else {
            }
        }, function (err) {
            console.error('ERROR', err);
        });
        return seq;
    };
    MercadoLibre.prototype.actualizarConversaciones = function () {
        var _this = this;
        if (this.preguntas) {
            this.preguntas.forEach(function (pregunta) {
                if (pregunta.preguntas_previas == null) {
                    _this.actualizarConveracionCon(pregunta);
                }
            });
        }
    };
    MercadoLibre.prototype.actualizarConveracionCon = function (pregunta) {
        var _this = this;
        if (this.user.cuentas != null) {
            this.user.cuentas.forEach(function (cuenta) {
                if (cuenta.id_ml == pregunta.seller_id) {
                    var token = cuenta.token;
                    var seq = _this.api.get(_this.urlML, 'questions/search', {
                        item: pregunta.item_id,
                        from: pregunta.from.id,
                        access_token: token,
                        sort: 'date_created_asc'
                    }, new http_1.RequestOptions()).share();
                    seq
                        .map(function (res) { return res.json(); })
                        .subscribe(function (res) {
                        if (res.questions != null) {
                            pregunta.preguntas_previas = res.questions;
                        }
                        else {
                            console.error('ERROR ACTUALIZANDO CONVERSACION DE UNA PREGUNTA', res);
                            return res.msg;
                        }
                    }, function (err) {
                        console.error('ERROR', err);
                        return err.msg;
                    });
                    return seq;
                }
            });
        }
    };
    MercadoLibre.prototype.dameNombreUsuario = function (from) {
        var seq = this.api.get(this.urlML, 'users/' + from.id, {}, new http_1.RequestOptions()).share();
        return seq;
    };
    MercadoLibre.prototype.setPregunta = function (pregunta) {
        this.pregunta = pregunta;
        this.actualizarConveracionCon(this.pregunta);
    };
    MercadoLibre.prototype.setPreguntaPorId = function (question_id) {
        var pregunta = this.preguntas.filter(function (pregunta) {
            return pregunta.question_id == question_id;
        });
        this.setPregunta(pregunta[0]);
    };
    MercadoLibre.prototype.removerPregunta = function () {
        var index = this.preguntas.indexOf(this.pregunta);
        this.preguntas.splice(index, 1);
    };
    MercadoLibre.prototype.cargarNuevaPregunta = function (resource) {
        this.actualizarPreguntas({});
    };
    MercadoLibre.prototype.actualizarPreguntas = function (accountInfo) {
        var _this = this;
        accountInfo = this.user.cargarHeadersAutorizations(accountInfo);
        var seq = this.api.get(this.user.getApi(), 'preguntas', {}, accountInfo).share();
        seq
            .map(function (res) { return res.json(); })
            .subscribe(function (res) {
            if (res.success == true) {
                _this.preguntas = res.data;
                _this.preguntas.forEach(function (pregunta) {
                    _this.actualizarConveracionCon(pregunta);
                    pregunta.seller_name = _this.user.dameNickname(pregunta.seller_id);
                });
            }
            else {
                console.error('ERROR ACTUALIZANDO PREGUNTAS', res);
                return res.msg;
            }
        }, function (err) {
            console.error('ERROR', err);
            return err.msg;
        });
        return seq;
    };
    return MercadoLibre;
}());
MercadoLibre = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http,
        api_1.Api,
        user_1.User])
], MercadoLibre);
exports.MercadoLibre = MercadoLibre;
//# sourceMappingURL=data:application/json;base64,